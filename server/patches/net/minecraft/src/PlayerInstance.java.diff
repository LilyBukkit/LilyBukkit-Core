--- PlayerInstance.java
+++ PlayerInstance.java
@@ -6,4 +6,5 @@
 
 class PlayerInstance {
+    final PlayerManager playerManager;
     private List players;
     private int chunkX;
@@ -18,9 +19,8 @@
     private int minZ;
     private int maxZ;
-    final PlayerManager playerManager;
-    
+
     public PlayerInstance(final PlayerManager playerManager, final int x, final int z) {
         this.playerManager = playerManager;
-        this.players = (List)new ArrayList();
+        this.players = (List) new ArrayList();
         this.blocksToUpdate = new short[10];
         this.numBlocksToUpdate = 0;
@@ -30,5 +30,5 @@
         PlayerManager.getMinecraftServer(playerManager).worldMngr.chunkProviderServer.loadChunk(x, z);
     }
-    
+
     public void addPlayer(final EntityPlayerMP entityPlayerMP) {
         if (this.players.contains(entityPlayerMP)) {
@@ -40,10 +40,9 @@
         entityPlayerMP.loadedChunks.add(this.currentChunk);
     }
-    
+
     public void removePlayer(final EntityPlayerMP entityPlayerMP) {
         if (!this.players.contains(entityPlayerMP)) {
             new IllegalStateException(new StringBuilder("Failed to remove player. ").append(entityPlayerMP).append(" isn't in chunk ").append(this.chunkX).append(", ").append(this.chunkZ).toString()).printStackTrace();
-        }
-        else {
+        } else {
             this.players.remove(entityPlayerMP);
             if (this.players.size() == 0) {
@@ -61,5 +60,5 @@
         }
     }
-    
+
     public void markBlockNeedsUpdate(final int x, final int y, final int z) {
         if (this.numBlocksToUpdate == 0) {
@@ -91,5 +90,5 @@
         }
         if (this.numBlocksToUpdate < 10) {
-            final short s4 = (short)(x << 12 | z << 8 | y);
+            final short s4 = (short) (x << 12 | z << 8 | y);
             for (int i5 = 0; i5 < this.numBlocksToUpdate; ++i5) {
                 if (this.blocksToUpdate[i5] == s4) {
@@ -100,8 +99,8 @@
         }
     }
-    
+
     public void sendTileEntity(final Packet packet) {
         for (int i2 = 0; i2 < this.players.size(); ++i2) {
-            final EntityPlayerMP entityPlayerMP3 = (EntityPlayerMP)this.players.get(i2);
+            final EntityPlayerMP entityPlayerMP3 = (EntityPlayerMP) this.players.get(i2);
             if (entityPlayerMP3.loadChunks.contains(this.currentChunk)) {
                 entityPlayerMP3.playerNetServerHandler.sendPacket(packet);
@@ -109,5 +108,5 @@
         }
     }
-    
+
     public void onUpdate() throws IOException {
         if (this.numBlocksToUpdate != 0) {
@@ -120,6 +119,5 @@
                     this.sendTileEntity(new Packet59ComplexEntity(i1, i2, i3, PlayerManager.getMinecraftServer(this.playerManager).worldMngr.getBlockTileEntity(i1, i2, i3)));
                 }
-            }
-            else if (this.numBlocksToUpdate == 10) {
+            } else if (this.numBlocksToUpdate == 10) {
                 this.minY = this.minY / 2 * 2;
                 this.maxY = (this.maxY / 2 + 1) * 2;
@@ -133,9 +131,8 @@
                 final List list7 = PlayerManager.getMinecraftServer(this.playerManager).worldMngr.getTileEntityList(i1, i2, i3, i1 + i4, i2 + i5, i3 + i6);
                 for (int i7 = 0; i7 < list7.size(); ++i7) {
-                    final TileEntity tileEntity9 = (TileEntity)list7.get(i7);
+                    final TileEntity tileEntity9 = (TileEntity) list7.get(i7);
                     this.sendTileEntity(new Packet59ComplexEntity(tileEntity9.xCoord, tileEntity9.yCoord, tileEntity9.zCoord, tileEntity9));
                 }
-            }
-            else {
+            } else {
                 this.sendTileEntity(new Packet52MultiBlockChange(this.chunkX, this.chunkZ, this.blocksToUpdate, this.numBlocksToUpdate, PlayerManager.getMinecraftServer(this.playerManager).worldMngr));
                 for (int i1 = 0; i1 < this.numBlocksToUpdate; ++i1) {
