--- AxisAlignedBB.java
+++ AxisAlignedBB.java
@@ -13,25 +13,25 @@
     public double maxY;
     public double maxZ;
-    
+
     static {
-        AxisAlignedBB.boundingBoxes = (List)new ArrayList();
+        AxisAlignedBB.boundingBoxes = (List) new ArrayList<>();
         AxisAlignedBB.numBoundingBoxesInUse = 0;
     }
-    
+
     public static AxisAlignedBB getBoundingBox(final double minX, final double minY, final double minZ, final double maxX, final double maxY, final double maxZ) {
         return new AxisAlignedBB(minX, minY, minZ, maxX, maxY, maxZ);
     }
-    
+
     public static void clearBoundingBoxPool() {
         AxisAlignedBB.numBoundingBoxesInUse = 0;
     }
-    
+
     public static AxisAlignedBB getBoundingBoxFromPool(final double minX, final double minY, final double minZ, final double maxX, final double maxY, final double maxZ) {
         if (AxisAlignedBB.numBoundingBoxesInUse >= AxisAlignedBB.boundingBoxes.size()) {
             AxisAlignedBB.boundingBoxes.add(getBoundingBox(0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
         }
-        return ((AxisAlignedBB)AxisAlignedBB.boundingBoxes.get(AxisAlignedBB.numBoundingBoxesInUse++)).setBounds(minX, minY, minZ, maxX, maxY, maxZ);
+        return ((AxisAlignedBB) AxisAlignedBB.boundingBoxes.get(AxisAlignedBB.numBoundingBoxesInUse++)).setBounds(minX, minY, minZ, maxX, maxY, maxZ);
     }
-    
+
     private AxisAlignedBB(final double minX, final double minY, final double minZ, final double maxX, final double maxY, final double maxZ) {
         this.minX = minX;
@@ -42,5 +42,5 @@
         this.maxZ = maxZ;
     }
-    
+
     public AxisAlignedBB setBounds(final double minX, final double minY, final double minZ, final double maxX, final double maxY, final double maxZ) {
         this.minX = minX;
@@ -52,5 +52,5 @@
         return this;
     }
-    
+
     public AxisAlignedBB addCoord(final double x, final double y, final double z) {
         double d7 = this.minX;
@@ -80,5 +80,5 @@
         return getBoundingBoxFromPool(d7, d8, d9, d10, d11, d12);
     }
-    
+
     public AxisAlignedBB expand(final double x, final double y, final double z) {
         final double d7 = this.minX - x;
@@ -90,9 +90,9 @@
         return getBoundingBoxFromPool(d7, d8, d9, d10, d11, d12);
     }
-    
+
     public AxisAlignedBB getOffsetBoundingBox(final double offsetX, final double offsetY, final double offsetZ) {
         return getBoundingBoxFromPool(this.minX + offsetX, this.minY + offsetY, this.minZ + offsetZ, this.maxX + offsetX, this.maxY + offsetY, this.maxZ + offsetZ);
     }
-    
+
     public double calculateXOffset(final AxisAlignedBB aabb, double offsetX) {
         if (aabb.maxY <= this.minY || aabb.minY >= this.maxY) {
@@ -116,5 +116,5 @@
         return offsetX;
     }
-    
+
     public double calculateYOffset(final AxisAlignedBB aabb, double offsetY) {
         if (aabb.maxX <= this.minX || aabb.minX >= this.maxX) {
@@ -138,5 +138,5 @@
         return offsetY;
     }
-    
+
     public double calculateZOffset(final AxisAlignedBB aabb, double offsetZ) {
         if (aabb.maxX <= this.minX || aabb.minX >= this.maxX) {
@@ -160,9 +160,9 @@
         return offsetZ;
     }
-    
+
     public boolean intersectsWith(final AxisAlignedBB aabb) {
         return aabb.maxX > this.minX && aabb.minX < this.maxX && (aabb.maxY > this.minY && aabb.minY < this.maxY) && (aabb.maxZ > this.minZ && aabb.minZ < this.maxZ);
     }
-    
+
     public AxisAlignedBB offset(final double offsetX, final double offsetY, final double offsetZ) {
         this.minX += offsetX;
@@ -174,5 +174,5 @@
         return this;
     }
-    
+
     public AxisAlignedBB removeCoord(final double x, final double y, final double z) {
         double d7 = this.minX;
@@ -202,9 +202,9 @@
         return getBoundingBoxFromPool(d7, d8, d9, d10, d11, d12);
     }
-    
+
     public AxisAlignedBB copy() {
         return getBoundingBoxFromPool(this.minX, this.minY, this.minZ, this.maxX, this.maxY, this.maxZ);
     }
-    
+
     public MovingObjectPosition calculateIntercept(final Vec3D vector1, final Vec3D vector2) {
         Vec3D vec3D3 = vector1.getIntermediateWithXValue(vector2, this.minX);
@@ -275,17 +275,17 @@
         return new MovingObjectPosition(0, 0, 0, b10, vec3D9);
     }
-    
+
     private boolean isVecInYZ(final Vec3D vector) {
         return vector != null && (vector.yCoord >= this.minY && vector.yCoord <= this.maxY && vector.zCoord >= this.minZ && vector.zCoord <= this.maxZ);
     }
-    
+
     private boolean isVecInXZ(final Vec3D vector) {
         return vector != null && (vector.xCoord >= this.minX && vector.xCoord <= this.maxX && vector.zCoord >= this.minZ && vector.zCoord <= this.maxZ);
     }
-    
+
     private boolean isVecInXY(final Vec3D vector) {
         return vector != null && (vector.xCoord >= this.minX && vector.xCoord <= this.maxX && vector.yCoord >= this.minY && vector.yCoord <= this.maxY);
     }
-    
+
     public void setBB(final AxisAlignedBB aabb) {
         this.minX = aabb.minX;
