--- BlockTorch.java
+++ BlockTorch.java
@@ -8,25 +8,25 @@
         this.setTickOnLoad(true);
     }
-    
+
     @Override
     public AxisAlignedBB getCollisionBoundingBoxFromPool(final World world, final int x, final int y, final int z) {
         return null;
     }
-    
+
     @Override
     public boolean isOpaqueCube() {
         return false;
     }
-    
+
     @Override
     public int getRenderType() {
         return 2;
     }
-    
+
     @Override
     public boolean canPlaceBlockAt(final World world, final int x, final int y, final int z) {
         return world.isBlockNormalCube(x - 1, y, z) || world.isBlockNormalCube(x + 1, y, z) || world.isBlockNormalCube(x, y, z - 1) || world.isBlockNormalCube(x, y, z + 1) || world.isBlockNormalCube(x, y - 1, z);
     }
-    
+
     @Override
     public void onBlockPlaced(final World world, final int x, final int y, final int z, final int notifyFlag) {
@@ -49,5 +49,5 @@
         world.setBlockMetadataWithNotify(x, y, z, i6);
     }
-    
+
     @Override
     public void updateTick(final World world, final int x, final int y, final int z, final Random random) {
@@ -57,25 +57,21 @@
         }
     }
-    
+
     @Override
     public void onBlockAdded(final World world, final int x, final int y, final int z) {
         if (world.isBlockNormalCube(x - 1, y, z)) {
             world.setBlockMetadataWithNotify(x, y, z, 1);
-        }
-        else if (world.isBlockNormalCube(x + 1, y, z)) {
+        } else if (world.isBlockNormalCube(x + 1, y, z)) {
             world.setBlockMetadataWithNotify(x, y, z, 2);
-        }
-        else if (world.isBlockNormalCube(x, y, z - 1)) {
+        } else if (world.isBlockNormalCube(x, y, z - 1)) {
             world.setBlockMetadataWithNotify(x, y, z, 3);
-        }
-        else if (world.isBlockNormalCube(x, y, z + 1)) {
+        } else if (world.isBlockNormalCube(x, y, z + 1)) {
             world.setBlockMetadataWithNotify(x, y, z, 4);
-        }
-        else if (world.isBlockNormalCube(x, y - 1, z)) {
+        } else if (world.isBlockNormalCube(x, y - 1, z)) {
             world.setBlockMetadataWithNotify(x, y, z, 5);
         }
         this.checkIfAttachedToBlock(world, x, y, z);
     }
-    
+
     @Override
     public void onNeighborBlockChange(final World world, final int x, final int y, final int z, final int flag) {
@@ -104,5 +100,5 @@
         }
     }
-    
+
     private boolean checkIfAttachedToBlock(final World world, final int x, final int y, final int z) {
         if (!this.canPlaceBlockAt(world, x, y, z)) {
@@ -113,5 +109,5 @@
         return true;
     }
-    
+
     @Override
     public MovingObjectPosition collisionRayTrace(final World world, final int x, final int y, final int z, final Vec3D vector1, final Vec3D vector2) {
@@ -120,15 +116,11 @@
         if (i7 == 1) {
             this.setBlockBounds(0.0f, 0.2f, 0.5f - f8, f8 * 2.0f, 0.8f, 0.5f + f8);
-        }
-        else if (i7 == 2) {
+        } else if (i7 == 2) {
             this.setBlockBounds(1.0f - f8 * 2.0f, 0.2f, 0.5f - f8, 1.0f, 0.8f, 0.5f + f8);
-        }
-        else if (i7 == 3) {
+        } else if (i7 == 3) {
             this.setBlockBounds(0.5f - f8, 0.2f, 0.0f, 0.5f + f8, 0.8f, f8 * 2.0f);
-        }
-        else if (i7 == 4) {
+        } else if (i7 == 4) {
             this.setBlockBounds(0.5f - f8, 0.2f, 1.0f - f8 * 2.0f, 0.5f + f8, 0.8f, 1.0f);
-        }
-        else {
+        } else {
             f8 = 0.1f;
             this.setBlockBounds(0.5f - f8, 0.0f, 0.5f - f8, 0.5f + f8, 0.6f, 0.5f + f8);
