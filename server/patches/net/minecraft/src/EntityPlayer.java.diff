--- EntityPlayer.java
+++ EntityPlayer.java
@@ -1,4 +1,10 @@
 package net.minecraft.src;
 
+import org.bukkit.Bukkit;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
+import org.bukkit.event.entity.EntityDeathEvent;
+import ru.vladthemountain.lilybukkit.LBWorld;
+
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
@@ -15,5 +21,5 @@
     private int damageRemainder;
     public Random playerRand;
-    
+
     public EntityPlayer(final World world) {
         super(world);
@@ -33,5 +39,5 @@
         this.playerRand = new Random();
     }
-    
+
     @Override
     public void updateRidden() {
@@ -40,5 +46,5 @@
         this.cameraYaw = 0.0f;
     }
-    
+
     @Override
     protected void updateEntityActionState() {
@@ -49,11 +55,10 @@
                 this.isSwinging = false;
             }
-        }
-        else {
+        } else {
             this.swingProgressInt = 0;
         }
         this.swingProgress = this.swingProgressInt / 8.0f;
     }
-    
+
     @Override
     public void onLivingUpdate() {
@@ -65,5 +70,5 @@
         super.onLivingUpdate();
         float f1 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
-        float f2 = (float)Math.atan(-this.motionY * 0.20000000298023224) * 15.0f;
+        float f2 = (float) Math.atan(-this.motionY * 0.20000000298023224) * 15.0f;
         if (f1 > 0.1f) {
             f1 = 0.1f;
@@ -81,5 +86,5 @@
             if (list3 != null) {
                 for (int i4 = 0; i4 < list3.size(); ++i4) {
-                    this.collideWithPlayer((Entity)list3.get(i4));
+                    this.collideWithPlayer((Entity) list3.get(i4));
                 }
             }
@@ -90,10 +95,9 @@
             int n3 = 0;
             while (n2 != 0) {
-                final int n4 = this.worldObj.getBlockId((int)this.posX, n2, (int)this.posZ);
+                final int n4 = this.worldObj.getBlockId((int) this.posX, n2, (int) this.posZ);
                 if (n4 == 0 || n4 == 116) {
                     --n2;
                     n3 = 1;
-                }
-                else {
+                } else {
                     if (n3 != 0) {
                         ++n2;
@@ -108,9 +112,9 @@
         }
     }
-    
+
     private void collideWithPlayer(final Entity entity) {
         entity.onCollideWithPlayer(this);
     }
-    
+
     @Override
     public void onDeath(final Entity entity) {
@@ -121,10 +125,29 @@
             this.dropPlayerItemWithRandomChoice(new ItemStack(Item.appleRed, 1), true);
         }
-        this.inventory.dropAllItems();
+        // LilyBukkit start
+        List<org.bukkit.inventory.ItemStack> loot = new ArrayList<>();
+
+        for (int i = 0; i < this.inventory.getSizeInventory(); i++) {
+            ItemStack vanillaIS = this.inventory.getStackInSlot(i);
+            loot.add(new org.bukkit.inventory.ItemStack(vanillaIS.itemID, vanillaIS.stackSize, (short) vanillaIS.itemDmg));
+        }
+        //CraftBukkit start
+        org.bukkit.entity.Entity bukkitEntity = Bukkit.getPlayer(this.username);
+        LBWorld bworld = (LBWorld) Bukkit.getWorld(this.worldObj.levelName);
+
+        EntityDeathEvent event = new EntityDeathEvent(bukkitEntity, loot);
+        Bukkit.getServer().getPluginManager().callEvent(event);
+
+        for (org.bukkit.inventory.ItemStack stack : event.getDrops()) {
+            bworld.dropItemNaturally(bukkitEntity.getLocation(), stack);
+        }
+        //CraftBukkit end
+        this.inventory = new InventoryPlayer(this);
+        // LilyBukkit end
+        //this.inventory.dropAllItems();
         if (entity != null) {
             this.motionX = -MathHelper.cos((this.attackedAtYaw + this.rotationYaw) * 3.1415927f / 180.0f) * 0.1f;
             this.motionZ = -MathHelper.sin((this.attackedAtYaw + this.rotationYaw) * 3.1415927f / 180.0f) * 0.1f;
-        }
-        else {
+        } else {
             final double n = 0.0;
             this.motionZ = n;
@@ -133,14 +156,14 @@
         this.yOffset = 0.1f;
     }
-    
+
     @Override
     public void addToPlayerScore(final Entity entity, final int score) {
         this.score += score;
     }
-    
+
     public void dropPlayerItem(final ItemStack stack) {
         this.dropPlayerItemWithRandomChoice(stack, false);
     }
-    
+
     public void dropPlayerItemWithRandomChoice(final ItemStack stack, final boolean z2) {
         if (stack != null) {
@@ -154,6 +177,5 @@
                 entityItem3.motionZ = MathHelper.cos(f6) * f5;
                 entityItem3.motionY = 0.20000000298023224;
-            }
-            else {
+            } else {
                 f4 = 0.3f;
                 entityItem3.motionX = -MathHelper.sin(this.rotationYaw / 180.0f * 3.1415927f) * MathHelper.cos(this.rotationPitch / 180.0f * 3.1415927f) * f4;
@@ -164,18 +186,18 @@
                 f4 *= this.rand.nextFloat();
                 final EntityItem entityItem4 = entityItem3;
-                entityItem4.motionX += Math.cos((double)f5) * f4;
+                entityItem4.motionX += Math.cos((double) f5) * f4;
                 final EntityItem entityItem5 = entityItem3;
                 entityItem5.motionY += (this.rand.nextFloat() - this.rand.nextFloat()) * 0.1f;
                 final EntityItem entityItem6 = entityItem3;
-                entityItem6.motionZ += Math.sin((double)f5) * f4;
+                entityItem6.motionZ += Math.sin((double) f5) * f4;
             }
             this.joinEntityItemWithWorld(entityItem3);
         }
     }
-    
+
     protected void joinEntityItemWithWorld(final EntityItem entityItem) {
-        this.worldObj.spawnEntityInWorld(entityItem);
+        this.worldObj.spawnEntityInWorld(entityItem, SpawnReason.NATURAL);
     }
-    
+
     public float getCurrentPlayerStrVsBlock(final Block block) {
         float f2 = this.inventory.getStrVsBlock(block);
@@ -188,9 +210,9 @@
         return f2;
     }
-    
+
     public boolean canHarvestBlock(final Block block) {
         return this.inventory.canHarvestBlock(block);
     }
-    
+
     @Override
     public void readEntityFromNBT(final NBTTagCompound nbttagcompound) {
@@ -199,25 +221,25 @@
         this.inventory.readFromNBT(nBTTagList2);
     }
-    
+
     @Override
     public void writeEntityToNBT(final NBTTagCompound nbttagcompound) {
         super.writeEntityToNBT(nbttagcompound);
-        nbttagcompound.setTag("Inventory", (NBTBase)this.inventory.writeToNBT(new NBTTagList()));
+        nbttagcompound.setTag("Inventory", (NBTBase) this.inventory.writeToNBT(new NBTTagList()));
     }
-    
+
     public void displayGUIChest(final IInventory inventory) {
     }
-    
+
     public void displayWorkbenchGUI() {
     }
-    
+
     public void onItemPickup(final Entity entity, final int i2) {
     }
-    
+
     @Override
     protected float getEyeHeight() {
         return 0.12f;
     }
-    
+
     @Override
     public boolean attackEntityFrom(final Entity entity, int damage) {
@@ -247,24 +269,24 @@
         return damage != 0 && super.attackEntityFrom(entity, damage);
     }
-    
+
     public void displayGUIFurnace(final TileEntityFurnace tileEntityFurnace) {
     }
-    
+
     public void displayGUIEditSign(final TileEntitySign tileEntitySign) {
     }
-    
+
     public ItemStack getCurrentEquippedItem() {
         return this.inventory.getCurrentItem();
     }
-    
+
     public void destroyCurrentEquippedItem() {
         this.inventory.setInventorySlotContents(this.inventory.currentItem, null);
     }
-    
+
     @Override
     public double getYOffset() {
         return this.yOffset - 0.5f;
     }
-    
+
     public void swingItem() {
         this.swingProgressInt = -1;
