--- NetServerHandler.java
+++ NetServerHandler.java
@@ -1,10 +1,16 @@
 package net.minecraft.src;
 
-import java.io.IOException;
 import net.minecraft.server.MinecraftServer;
+
+import java.io.IOException;
 import java.util.logging.Logger;
 
 public class NetServerHandler extends NetHandler implements ICommandListener {
     public static Logger logger;
+
+    static {
+        NetServerHandler.logger = Logger.getLogger("Minecraft");
+    }
+
     public NetworkManager netManager;
     public boolean connectionClosed;
@@ -17,9 +23,5 @@
     private boolean hasMoved;
     private ItemStack heldItem;
-    
-    static {
-        NetServerHandler.logger = Logger.getLogger("Minecraft");
-    }
-    
+
     public NetServerHandler(final MinecraftServer minecraftServer1, final NetworkManager networkManager2, final EntityPlayerMP entityPlayerMP3) {
         this.connectionClosed = false;
@@ -32,5 +34,5 @@
         entityPlayerMP3.playerNetServerHandler = this;
     }
-    
+
     public void handlePackets() throws IOException {
         this.netManager.processReadPackets();
@@ -39,5 +41,5 @@
         }
     }
-    
+
     public void kickPlayer(final String string1) {
         this.netManager.addToSendQueue(new Packet255KickDisconnect(string1));
@@ -46,5 +48,5 @@
         this.connectionClosed = true;
     }
-    
+
     @Override
     public void handleFlying(final Packet10Flying packet) {
@@ -110,5 +112,5 @@
         }
     }
-    
+
     public void teleportTo(final double d1, final double d3, final double d5, final float f7, final float f8) {
         this.hasMoved = false;
@@ -119,5 +121,5 @@
         this.playerEntity.playerNetServerHandler.sendPacket(new Packet13PlayerLookMove(d1, d3 + 1.6200000047683716, d3, d5, f7, f8, false));
     }
-    
+
     @Override
     public void handleBlockDig(final Packet14BlockDig packet) {
@@ -150,6 +152,6 @@
         final int i20 = packet.zPosition;
         final int i21 = packet.face;
-        final int i22 = (int)MathHelper.abs((float)(i18 - this.mcServer.worldMngr.spawnX));
-        int i23 = (int)MathHelper.abs((float)(i20 - this.mcServer.worldMngr.spawnZ));
+        final int i22 = (int) MathHelper.abs((float) (i18 - this.mcServer.worldMngr.spawnX));
+        int i23 = (int) MathHelper.abs((float) (i20 - this.mcServer.worldMngr.spawnZ));
         if (i22 > i23) {
             i23 = i22;
@@ -159,14 +161,11 @@
                 this.playerEntity.theItemInWorldManager.onBlockClicked(i18, i19, i20);
             }
-        }
-        else if (packet.status == 2) {
+        } else if (packet.status == 2) {
             this.playerEntity.theItemInWorldManager.blockRemoving();
-        }
-        else if (packet.status == 1) {
+        } else if (packet.status == 1) {
             if (i23 > 16 || z2) {
                 this.playerEntity.theItemInWorldManager.updateBlockRemoving(i18, i19, i20, i21);
             }
-        }
-        else if (packet.status == 3) {
+        } else if (packet.status == 3) {
             final double d5 = this.playerEntity.posX - (i18 + 0.5);
             final double d6 = this.playerEntity.posY - (i19 + 0.5);
@@ -179,5 +178,5 @@
         this.mcServer.worldMngr.disableSpawnProtection = false;
     }
-    
+
     @Override
     public void handlePlace(final Packet15Place packet) {
@@ -190,6 +189,6 @@
         final int i5 = packet.zPosition;
         final int i6 = packet.direction;
-        final int i7 = (int)MathHelper.abs((float)(i3 - this.mcServer.worldMngr.spawnX));
-        int i8 = (int)MathHelper.abs((float)(i5 - this.mcServer.worldMngr.spawnZ));
+        final int i7 = (int) MathHelper.abs((float) (i3 - this.mcServer.worldMngr.spawnX));
+        int i8 = (int) MathHelper.abs((float) (i5 - this.mcServer.worldMngr.spawnZ));
         if (i7 > i8) {
             i8 = i7;
@@ -202,5 +201,5 @@
         this.mcServer.worldMngr.disableSpawnProtection = false;
     }
-    
+
     @Override
     public void handleErrorMessage(final String message) {
@@ -209,5 +208,5 @@
         this.connectionClosed = true;
     }
-    
+
     @Override
     public void registerPacket(final Packet packet) {
@@ -215,9 +214,9 @@
         this.kickPlayer("Protocol error, unexpected packet");
     }
-    
+
     public void sendPacket(final Packet packet1) {
         this.netManager.addToSendQueue(packet1);
     }
-    
+
     @Override
     public void handleBlockItemSwitch(final Packet16BlockItemSwitch packet) {
@@ -226,6 +225,5 @@
         if (i2 == 0) {
             this.heldItem = null;
-        }
-        else {
+        } else {
             this.heldItem = new ItemStack(i2);
         }
@@ -233,5 +231,5 @@
         this.mcServer.entityTracker.sendPacketToTrackedPlayers(this.playerEntity, new Packet16BlockItemSwitch(this.playerEntity.entityID, i2));
     }
-    
+
     @Override
     public void handlePickupSpawn(final Packet21PickupSpawn packet) {
@@ -246,5 +244,5 @@
         this.mcServer.worldMngr.spawnEntityInWorld(entityItem8);
     }
-    
+
     @Override
     public void handleChat(final Packet3Chat packet) {
@@ -252,9 +250,8 @@
         if (string2.length() > 100) {
             this.kickPlayer("Chat message too long");
-        }
-        else {
+        } else {
             string2 = string2.trim();
             for (int i3 = 0; i3 < string2.length(); ++i3) {
-                if (" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00c7\u00fc\u00e9\u00e2\u00e4\u00e0\u00e5\u00e7\u00ea\u00eb\u00e8\u00ef\u00ee\u00ec\u00c4\u00c5\u00c9\u00e6\u00c6\u00f4\u00f6\u00f2\u00fb\u00f9\u00ff\u00d6\u00dc\u00f8£\u00d8\u00d7\u0192\u00e1\u00ed\u00f3\u00fa\u00f1\u00d1ªº¿®¬½¼¡«»".indexOf((int)string2.charAt(i3)) < 0) {
+                if (" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00c7\u00fc\u00e9\u00e2\u00e4\u00e0\u00e5\u00e7\u00ea\u00eb\u00e8\u00ef\u00ee\u00ec\u00c4\u00c5\u00c9\u00e6\u00c6\u00f4\u00f6\u00f2\u00fb\u00f9\u00ff\u00d6\u00dc\u00f8£\u00d8\u00d7\u0192\u00e1\u00ed\u00f3\u00fa\u00f1\u00d1ªº¿®¬½¼¡«»".indexOf((int) string2.charAt(i3)) < 0) {
                     this.kickPlayer("Illegal characters in chat");
                     return;
@@ -263,6 +260,5 @@
             if (string2.startsWith("/")) {
                 this.handleSlashCommand(string2);
-            }
-            else {
+            } else {
                 string2 = new StringBuilder("<").append(this.playerEntity.username).append("> ").append(string2).toString();
                 NetServerHandler.logger.info(string2);
@@ -271,5 +267,5 @@
         }
     }
-    
+
     private void handleSlashCommand(String string1) {
         if (string1.toLowerCase().startsWith("/me ")) {
@@ -277,6 +273,5 @@
             NetServerHandler.logger.info(string1);
             this.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat(string1));
-        }
-        else if (string1.toLowerCase().startsWith("/tell ")) {
+        } else if (string1.toLowerCase().startsWith("/tell ")) {
             final String[] string2 = string1.split(" ");
             if (string2.length >= 3) {
@@ -289,16 +284,13 @@
                 }
             }
-        }
-        else if (string1.toLowerCase().equalsIgnoreCase("/home")) {
+        } else if (string1.toLowerCase().equalsIgnoreCase("/home")) {
             NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " returned home");
             final int i3 = this.mcServer.worldMngr.getTopSolidOrLiquidBlock(this.mcServer.worldMngr.spawnX, this.mcServer.worldMngr.spawnZ);
             this.teleportTo(this.mcServer.worldMngr.spawnX + 0.5, i3 + 1.5, this.mcServer.worldMngr.spawnZ + 0.5, 0.0f, 0.0f);
-        }
-        else if (string1.toLowerCase().equalsIgnoreCase("/iron")) {
+        } else if (string1.toLowerCase().equalsIgnoreCase("/iron")) {
             if (MinecraftServer.playerList.containsKey(this.playerEntity.username)) {
                 NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " failed to iron!");
                 this.sendPacket(new Packet3Chat("§cYou can't /iron again so soon!"));
-            }
-            else {
+            } else {
                 MinecraftServer.playerList.put(this.playerEntity.username, 6000);
                 NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " ironed!");
@@ -307,11 +299,9 @@
                 }
             }
-        }
-        else if (string1.toLowerCase().equalsIgnoreCase("/wood")) {
+        } else if (string1.toLowerCase().equalsIgnoreCase("/wood")) {
             if (MinecraftServer.playerList.containsKey(this.playerEntity.username)) {
                 NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " failed to wood!");
                 this.sendPacket(new Packet3Chat("§cYou can't /wood again so soon!"));
-            }
-            else {
+            } else {
                 MinecraftServer.playerList.put(this.playerEntity.username, 6000);
                 NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " wooded!");
@@ -320,16 +310,14 @@
                 }
             }
-        }
-        else if (this.mcServer.configManager.isOp(this.playerEntity.username)) {
+        } else if (this.mcServer.configManager.isOp(this.playerEntity.username)) {
             final String string3 = string1.substring(1);
             NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " issued server command: " + string3);
             this.mcServer.addCommand(string3, this);
-        }
-        else {
+        } else {
             final String string3 = string1.substring(1);
             NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " tried command: " + string3);
         }
     }
-    
+
     @Override
     public void handleArmAnimation(final Packet18ArmAnimation packet) {
@@ -338,24 +326,24 @@
         }
     }
-    
+
     @Override
     public void handleKickDisconnect(final Packet255KickDisconnect packet) {
         this.netManager.networkShutdown("Quitting");
     }
-    
+
     public int getNumChunkDataPackets() {
         return this.netManager.getNumChunkDataPackets();
     }
-    
+
     @Override
     public void addHelpCommandMessage(final String helpCommandMessage) {
         this.sendPacket(new Packet3Chat(new StringBuilder("§7").append(helpCommandMessage).toString()));
     }
-    
+
     @Override
     public String getUsername() {
         return this.playerEntity.username;
     }
-    
+
     @Override
     public void handlePlayerInventory(final Packet5PlayerInventory packet) {
@@ -370,5 +358,5 @@
         }
     }
-    
+
     public void sendInventoryPackets() {
         this.netManager.addToSendQueue(new Packet5PlayerInventory(-1, this.playerEntity.inventory.mainInventory));
@@ -376,5 +364,5 @@
         this.netManager.addToSendQueue(new Packet5PlayerInventory(-3, this.playerEntity.inventory.armorInventory));
     }
-    
+
     @Override
     public void handleComplexEntity(final Packet59ComplexEntity packet) {
