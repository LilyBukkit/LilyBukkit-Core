--- EntityPlayerMP.java
+++ EntityPlayerMP.java
@@ -1,9 +1,10 @@
 package net.minecraft.src;
 
+import net.minecraft.server.MinecraftServer;
+
 import java.util.HashSet;
 import java.util.LinkedList;
-import java.util.Set;
 import java.util.List;
-import net.minecraft.server.MinecraftServer;
+import java.util.Set;
 
 public class EntityPlayerMP extends EntityPlayer {
@@ -16,9 +17,9 @@
     public Set loadChunks;
     public double managedPosY;
-    
+
     public EntityPlayerMP(final MinecraftServer minecraftServer, final World world, final String username, final ItemInWorldManager itemManager) {
         super(world);
-        this.loadedChunks = (List)new LinkedList();
-        this.loadChunks = (Set)new HashSet();
+        this.loadedChunks = (List) new LinkedList();
+        this.loadChunks = (Set) new HashSet();
         final int i5 = world.spawnX + this.rand.nextInt(20) - 10;
         final int i6 = world.spawnZ + this.rand.nextInt(20) - 10;
@@ -32,22 +33,22 @@
         this.yOffset = 0.0f;
     }
-    
+
     @Override
     public void onUpdate() {
     }
-    
+
     @Override
     public void onDeath(final Entity entity) {
     }
-    
+
     @Override
     public boolean attackEntityFrom(final Entity entity, final int damage) {
         return false;
     }
-    
+
     @Override
     public void heal(final int health) {
     }
-    
+
     public void onUpdateEntity() {
         super.onUpdate();
@@ -55,5 +56,5 @@
         double d2 = 0.0;
         for (int i4 = 0; i4 < this.loadedChunks.size(); ++i4) {
-            final ChunkCoordIntPair chunkCoordIntPair2 = (ChunkCoordIntPair)this.loadedChunks.get(i4);
+            final ChunkCoordIntPair chunkCoordIntPair2 = (ChunkCoordIntPair) this.loadedChunks.get(i4);
             final double d3 = chunkCoordIntPair2.a(this);
             if (i4 == 0 || d3 < d2) {
@@ -75,5 +76,5 @@
                 final List list9 = this.mcServer.worldMngr.getTileEntityList(chunkCoordIntPair1.chunkXPos * 16, 0, chunkCoordIntPair1.chunkZPos * 16, chunkCoordIntPair1.chunkXPos * 16 + 16, 128, chunkCoordIntPair1.chunkZPos * 16 + 16);
                 for (int i5 = 0; i5 < list9.size(); ++i5) {
-                    final TileEntity tileEntity7 = (TileEntity)list9.get(i5);
+                    final TileEntity tileEntity7 = (TileEntity) list9.get(i5);
                     this.playerNetServerHandler.sendPacket(new Packet59ComplexEntity(tileEntity7.xCoord, tileEntity7.yCoord, tileEntity7.zCoord, tileEntity7));
                 }
@@ -81,5 +82,5 @@
         }
     }
-    
+
     @Override
     public void onLivingUpdate() {
@@ -91,14 +92,14 @@
         super.onLivingUpdate();
     }
-    
+
     @Override
     public void onItemPickup(final Entity entity, final int i2) {
         if (!entity.isDead && entity instanceof EntityItem) {
-            this.playerNetServerHandler.sendPacket(new Packet17AddToInventory(((EntityItem)entity).item, i2));
+            this.playerNetServerHandler.sendPacket(new Packet17AddToInventory(((EntityItem) entity).item, i2));
             this.mcServer.entityTracker.sendPacketToTrackedPlayers(entity, new Packet22Collect(entity.entityID, this.entityID));
         }
         super.onItemPickup(entity, i2);
     }
-    
+
     @Override
     public void swingItem() {
@@ -109,5 +110,5 @@
         }
     }
-    
+
     @Override
     protected float getEyeHeight() {
