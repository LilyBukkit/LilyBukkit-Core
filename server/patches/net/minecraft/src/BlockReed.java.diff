--- BlockReed.java
+++ BlockReed.java
@@ -11,10 +11,11 @@
         this.setTickOnLoad(true);
     }
-    
+
     @Override
     public void updateTick(final World world, final int x, final int y, final int z, final Random random) {
         if (world.getBlockId(x, y + 1, z) == 0) {
             int i6;
-            for (i6 = 1; world.getBlockId(x, y - i6, z) == this.blockID; ++i6) {}
+            for (i6 = 1; world.getBlockId(x, y - i6, z) == this.blockID; ++i6) {
+            }
             if (i6 < 3) {
                 final int i7 = world.getBlockMetadata(x, y, z);
@@ -22,6 +23,5 @@
                     world.setBlockWithNotify(x, y + 1, z, this.blockID);
                     world.setBlockMetadataWithNotify(x, y, z, 0);
-                }
-                else {
+                } else {
                     world.setBlockMetadataWithNotify(x, y, z, i7 + 1);
                 }
@@ -29,5 +29,5 @@
         }
     }
-    
+
     @Override
     public boolean canPlaceBlockAt(final World world, final int x, final int y, final int z) {
@@ -35,10 +35,10 @@
         return i5 == this.blockID || ((i5 == Block.grass.blockID || i5 == Block.dirt.blockID) && (world.getBlockMaterial(x - 1, y - 1, z) == Material.water || world.getBlockMaterial(x + 1, y - 1, z) == Material.water || world.getBlockMaterial(x, y - 1, z - 1) == Material.water || world.getBlockMaterial(x, y - 1, z + 1) == Material.water));
     }
-    
+
     @Override
     public void onNeighborBlockChange(final World world, final int x, final int y, final int z, final int flag) {
         this.checkBlockCoordValid(world, x, y, z);
     }
-    
+
     protected final void checkBlockCoordValid(final World world, final int x, final int y, final int z) {
         if (!this.canBlockStay(world, x, y, z)) {
@@ -47,25 +47,25 @@
         }
     }
-    
+
     @Override
     public boolean canBlockStay(final World world, final int x, final int y, final int z) {
         return this.canPlaceBlockAt(world, x, y, z);
     }
-    
+
     @Override
     public AxisAlignedBB getCollisionBoundingBoxFromPool(final World world, final int x, final int y, final int z) {
         return null;
     }
-    
+
     @Override
     public int idDropped(final int count, final Random random) {
         return Item.reed.shiftedIndex;
     }
-    
+
     @Override
     public boolean isOpaqueCube() {
         return false;
     }
-    
+
     @Override
     public int getRenderType() {
