--- BlockButton.java
+++ BlockButton.java
@@ -8,25 +8,25 @@
         this.setTickOnLoad(true);
     }
-    
+
     @Override
     public AxisAlignedBB getCollisionBoundingBoxFromPool(final World world, final int x, final int y, final int z) {
         return null;
     }
-    
+
     @Override
     public int tickRate() {
         return 20;
     }
-    
+
     @Override
     public boolean isOpaqueCube() {
         return false;
     }
-    
+
     @Override
     public boolean canPlaceBlockAt(final World world, final int x, final int y, final int z) {
         return world.isBlockNormalCube(x - 1, y, z) || world.isBlockNormalCube(x + 1, y, z) || world.isBlockNormalCube(x, y, z - 1) || world.isBlockNormalCube(x, y, z + 1);
     }
-    
+
     @Override
     public void onBlockPlaced(final World world, final int x, final int y, final int z, final int notifyFlag) {
@@ -48,22 +48,19 @@
         world.setBlockMetadataWithNotify(x, y, z, i6 + i7);
     }
-    
+
     @Override
     public void onBlockAdded(final World world, final int x, final int y, final int z) {
         if (world.isBlockNormalCube(x - 1, y, z)) {
             world.setBlockMetadataWithNotify(x, y, z, 1);
-        }
-        else if (world.isBlockNormalCube(x + 1, y, z)) {
+        } else if (world.isBlockNormalCube(x + 1, y, z)) {
             world.setBlockMetadataWithNotify(x, y, z, 2);
-        }
-        else if (world.isBlockNormalCube(x, y, z - 1)) {
+        } else if (world.isBlockNormalCube(x, y, z - 1)) {
             world.setBlockMetadataWithNotify(x, y, z, 3);
-        }
-        else if (world.isBlockNormalCube(x, y, z + 1)) {
+        } else if (world.isBlockNormalCube(x, y, z + 1)) {
             world.setBlockMetadataWithNotify(x, y, z, 4);
         }
         this.checkIfAttachedToBlock(world, x, y, z);
     }
-    
+
     @Override
     public void onNeighborBlockChange(final World world, final int x, final int y, final int z, final int flag) {
@@ -89,5 +86,5 @@
         }
     }
-    
+
     private boolean checkIfAttachedToBlock(final World world, final int x, final int y, final int z) {
         if (!this.canPlaceBlockAt(world, x, y, z)) {
@@ -98,5 +95,5 @@
         return true;
     }
-    
+
     @Override
     public void setBlockBoundsBasedOnState(final IBlockAccess blockAccess, final int x, final int y, final int z) {
@@ -113,21 +110,18 @@
         if (i6 == 1) {
             this.setBlockBounds(0.0f, f8, 0.5f - f10, f11, f9, 0.5f + f10);
-        }
-        else if (i6 == 2) {
+        } else if (i6 == 2) {
             this.setBlockBounds(1.0f - f11, f8, 0.5f - f10, 1.0f, f9, 0.5f + f10);
-        }
-        else if (i6 == 3) {
+        } else if (i6 == 3) {
             this.setBlockBounds(0.5f - f10, f8, 0.0f, 0.5f + f10, f9, f11);
-        }
-        else if (i6 == 4) {
+        } else if (i6 == 4) {
             this.setBlockBounds(0.5f - f10, f8, 1.0f - f11, 0.5f + f10, f9, 1.0f);
         }
     }
-    
+
     @Override
     public void onBlockClicked(final World world, final int x, final int y, final int z, final EntityPlayer entityPlayer) {
         this.blockActivated(world, x, y, z, entityPlayer);
     }
-    
+
     @Override
     public boolean blockActivated(final World world, final int x, final int y, final int z, final EntityPlayer entityPlayer) {
@@ -144,15 +138,11 @@
         if (i7 == 1) {
             world.notifyBlocksOfNeighborChange(x - 1, y, z, this.blockID);
-        }
-        else if (i7 == 2) {
+        } else if (i7 == 2) {
             world.notifyBlocksOfNeighborChange(x + 1, y, z, this.blockID);
-        }
-        else if (i7 == 3) {
+        } else if (i7 == 3) {
             world.notifyBlocksOfNeighborChange(x, y, z - 1, this.blockID);
-        }
-        else if (i7 == 4) {
+        } else if (i7 == 4) {
             world.notifyBlocksOfNeighborChange(x, y, z + 1, this.blockID);
-        }
-        else {
+        } else {
             world.notifyBlocksOfNeighborChange(x, y - 1, z, this.blockID);
         }
@@ -160,5 +150,5 @@
         return true;
     }
-    
+
     @Override
     public void onBlockRemoval(final World world, final int x, final int y, final int z) {
@@ -169,15 +159,11 @@
             if (i6 == 1) {
                 world.notifyBlocksOfNeighborChange(x - 1, y, z, this.blockID);
-            }
-            else if (i6 == 2) {
+            } else if (i6 == 2) {
                 world.notifyBlocksOfNeighborChange(x + 1, y, z, this.blockID);
-            }
-            else if (i6 == 3) {
+            } else if (i6 == 3) {
                 world.notifyBlocksOfNeighborChange(x, y, z - 1, this.blockID);
-            }
-            else if (i6 == 4) {
+            } else if (i6 == 4) {
                 world.notifyBlocksOfNeighborChange(x, y, z + 1, this.blockID);
-            }
-            else {
+            } else {
                 world.notifyBlocksOfNeighborChange(x, y - 1, z, this.blockID);
             }
@@ -185,10 +171,10 @@
         super.onBlockRemoval(world, x, y, z);
     }
-    
+
     @Override
     public boolean isPoweringTo(final IBlockAccess blockAccess, final int x, final int y, final int z, final int unused) {
         return (blockAccess.getBlockMetadata(x, y, z) & 0x8) > 0;
     }
-    
+
     @Override
     public boolean isIndirectlyPoweringTo(final World world, final int x, final int y, final int z, final int flag) {
@@ -200,10 +186,10 @@
         return (i7 == 5 && flag == 1) || (i7 == 4 && flag == 2) || (i7 == 3 && flag == 3) || (i7 == 2 && flag == 4) || (i7 == 1 && flag == 5);
     }
-    
+
     @Override
     public boolean canProvidePower() {
         return true;
     }
-    
+
     @Override
     public void updateTick(final World world, final int x, final int y, final int z, final Random random) {
@@ -215,15 +201,11 @@
             if (i7 == 1) {
                 world.notifyBlocksOfNeighborChange(x - 1, y, z, this.blockID);
-            }
-            else if (i7 == 2) {
+            } else if (i7 == 2) {
                 world.notifyBlocksOfNeighborChange(x + 1, y, z, this.blockID);
-            }
-            else if (i7 == 3) {
+            } else if (i7 == 3) {
                 world.notifyBlocksOfNeighborChange(x, y, z - 1, this.blockID);
-            }
-            else if (i7 == 4) {
+            } else if (i7 == 4) {
                 world.notifyBlocksOfNeighborChange(x, y, z + 1, this.blockID);
-            }
-            else {
+            } else {
                 world.notifyBlocksOfNeighborChange(x, y - 1, z, this.blockID);
             }
