--- TileEntity.java
+++ TileEntity.java
@@ -7,18 +7,19 @@
     private static Map nameToClassMap;
     private static Map classToNameMap;
+
+    static {
+        TileEntity.nameToClassMap = (Map) new HashMap();
+        TileEntity.classToNameMap = (Map) new HashMap();
+        addMapping((Class) TileEntityFurnace.class, "Furnace");
+        addMapping((Class) TileEntityChest.class, "Chest");
+        addMapping((Class) TileEntitySign.class, "Sign");
+        addMapping((Class) TileEntityMobSpawner.class, "MobSpawner");
+    }
+
     public World worldObj;
     public int xCoord;
     public int yCoord;
     public int zCoord;
-    
-    static {
-        TileEntity.nameToClassMap = (Map)new HashMap();
-        TileEntity.classToNameMap = (Map)new HashMap();
-        addMapping((Class)TileEntityFurnace.class, "Furnace");
-        addMapping((Class)TileEntityChest.class, "Chest");
-        addMapping((Class)TileEntitySign.class, "Sign");
-        addMapping((Class)TileEntityMobSpawner.class, "MobSpawner");
-    }
-    
+
     private static void addMapping(final Class clazz, final String tileEntityName) {
         if (TileEntity.classToNameMap.containsKey(tileEntityName)) {
@@ -28,5 +29,23 @@
         TileEntity.classToNameMap.put(clazz, tileEntityName);
     }
-    
+
+    public static TileEntity createAndLoadEntity(final NBTTagCompound nbttagcompound) {
+        TileEntity tileEntity1 = null;
+        try {
+            final Class class2 = (Class) TileEntity.nameToClassMap.get(nbttagcompound.getString("id"));
+            if (class2 != null) {
+                tileEntity1 = (TileEntity) class2.newInstance();
+            }
+        } catch (Exception exception3) {
+            exception3.printStackTrace();
+        }
+        if (tileEntity1 != null) {
+            tileEntity1.readFromNBT(nbttagcompound);
+        } else {
+            System.out.println(new StringBuilder("Skipping TileEntity with id ").append(nbttagcompound.getString("id")).toString());
+        }
+        return tileEntity1;
+    }
+
     public void readFromNBT(final NBTTagCompound nbttagcompound) {
         this.xCoord = nbttagcompound.getInteger("x");
@@ -34,7 +53,7 @@
         this.zCoord = nbttagcompound.getInteger("z");
     }
-    
+
     public void writeToNBT(final NBTTagCompound nbttagcompound) {
-        final String string2 = (String)TileEntity.classToNameMap.get(this.getClass());
+        final String string2 = (String) TileEntity.classToNameMap.get(this.getClass());
         if (string2 == null) {
             throw new RuntimeException(new StringBuilder().append(this.getClass()).append(" is missing a mapping! This is a bug!").toString());
@@ -45,28 +64,8 @@
         nbttagcompound.setInteger("z", this.zCoord);
     }
-    
+
     public void updateEntity() {
     }
-    
-    public static TileEntity createAndLoadEntity(final NBTTagCompound nbttagcompound) {
-        TileEntity tileEntity1 = null;
-        try {
-            final Class class2 = (Class)TileEntity.nameToClassMap.get(nbttagcompound.getString("id"));
-            if (class2 != null) {
-                tileEntity1 = (TileEntity)class2.newInstance();
-            }
-        }
-        catch (Exception exception3) {
-            exception3.printStackTrace();
-        }
-        if (tileEntity1 != null) {
-            tileEntity1.readFromNBT(nbttagcompound);
-        }
-        else {
-            System.out.println(new StringBuilder("Skipping TileEntity with id ").append(nbttagcompound.getString("id")).toString());
-        }
-        return tileEntity1;
-    }
-    
+
     public void onInventoryChanged() {
         this.worldObj.updateTileEntityChunkAndDoNothing(this.xCoord, this.yCoord, this.zCoord, this);
