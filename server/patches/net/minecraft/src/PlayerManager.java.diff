--- PlayerManager.java
+++ PlayerManager.java
@@ -1,7 +1,8 @@
 package net.minecraft.src;
 
+import net.minecraft.server.MinecraftServer;
+
 import java.io.IOException;
 import java.util.ArrayList;
-import net.minecraft.server.MinecraftServer;
 import java.util.List;
 
@@ -11,22 +12,34 @@
     private List playerInstancesToUpdate;
     private MinecraftServer mcServer;
-    
+
     public PlayerManager(final MinecraftServer mcServer) {
-        this.players = (List)new ArrayList();
+        this.players = (List) new ArrayList();
         this.playerInstances = new MCHashTable2();
-        this.playerInstancesToUpdate = (List)new ArrayList();
+        this.playerInstancesToUpdate = (List) new ArrayList();
         this.mcServer = mcServer;
     }
-    
+
+    static MinecraftServer getMinecraftServer(final PlayerManager playerManager) {
+        return playerManager.mcServer;
+    }
+
+    static MCHashTable2 getPlayerInstances(final PlayerManager playerManager) {
+        return playerManager.playerInstances;
+    }
+
+    static List getPlayerInstancesToUpdate(final PlayerManager playerManager) {
+        return playerManager.playerInstancesToUpdate;
+    }
+
     public void updatePlayerInstances() throws IOException {
         for (int i1 = 0; i1 < this.playerInstancesToUpdate.size(); ++i1) {
-            ((PlayerInstance)this.playerInstancesToUpdate.get(i1)).onUpdate();
+            ((PlayerInstance) this.playerInstancesToUpdate.get(i1)).onUpdate();
         }
         this.playerInstancesToUpdate.clear();
     }
-    
+
     private PlayerInstance getPlayerInstance(final int i1, final int i2, final boolean z3) {
         final long j4 = i1 + 2147483647L | i2 + 2147483647L << 32;
-        PlayerInstance playerInstance6 = (PlayerInstance)this.playerInstances.lookup(j4);
+        PlayerInstance playerInstance6 = (PlayerInstance) this.playerInstances.lookup(j4);
         if (playerInstance6 == null && z3) {
             playerInstance6 = new PlayerInstance(this, i1, i2);
@@ -35,5 +48,5 @@
         return playerInstance6;
     }
-    
+
     public void sendTileEntity(final Packet packet, final int x, final int y, final int z) {
         final int i5 = x >> 4;
@@ -44,5 +57,5 @@
         }
     }
-    
+
     public void markBlockNeedsUpdate(final int x, final int y, final int z) {
         final int i4 = x >> 4;
@@ -53,9 +66,9 @@
         }
     }
-    
+
     public void addPlayer(final EntityPlayerMP entityPlayerMP) {
         this.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat(new StringBuilder("§e").append(entityPlayerMP.username).append(" joined the game.").toString()));
-        final int i2 = (int)entityPlayerMP.posX >> 4;
-        final int i3 = (int)entityPlayerMP.posZ >> 4;
+        final int i2 = (int) entityPlayerMP.posX >> 4;
+        final int i3 = (int) entityPlayerMP.posZ >> 4;
         entityPlayerMP.managedPosX = entityPlayerMP.posX;
         entityPlayerMP.managedPosZ = entityPlayerMP.posZ;
@@ -67,9 +80,9 @@
         this.players.add(entityPlayerMP);
     }
-    
+
     public void removePlayer(final EntityPlayerMP entityPlayerMP) {
         this.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat(new StringBuilder("§e").append(entityPlayerMP.username).append(" left the game.").toString()));
-        final int i2 = (int)entityPlayerMP.posX >> 4;
-        final int i3 = (int)entityPlayerMP.posZ >> 4;
+        final int i2 = (int) entityPlayerMP.posX >> 4;
+        final int i3 = (int) entityPlayerMP.posZ >> 4;
         for (int i4 = i2 - 10; i4 <= i2 + 10; ++i4) {
             for (int i5 = i3 - 10; i5 <= i3 + 10; ++i5) {
@@ -82,5 +95,5 @@
         this.players.remove(entityPlayerMP);
     }
-    
+
     private boolean a(final int i1, final int i2, final int i3, final int i4) {
         final int i5 = i1 - i3;
@@ -88,14 +101,14 @@
         return i5 >= -10 && i5 <= 10 && (i6 >= -10 && i6 <= 10);
     }
-    
+
     public void updateMountedMovingPlayer(final EntityPlayerMP entityPlayerMP) {
-        final int i2 = (int)entityPlayerMP.posX >> 4;
-        final int i3 = (int)entityPlayerMP.posZ >> 4;
+        final int i2 = (int) entityPlayerMP.posX >> 4;
+        final int i3 = (int) entityPlayerMP.posZ >> 4;
         final double d4 = entityPlayerMP.managedPosX - entityPlayerMP.posX;
         final double d5 = entityPlayerMP.managedPosZ - entityPlayerMP.posZ;
         final double d6 = d4 * d4 + d5 * d5;
         if (d6 >= 64.0) {
-            final int i4 = (int)entityPlayerMP.managedPosX >> 4;
-            final int i5 = (int)entityPlayerMP.managedPosZ >> 4;
+            final int i4 = (int) entityPlayerMP.managedPosX >> 4;
+            final int i5 = (int) entityPlayerMP.managedPosZ >> 4;
             final int i6 = i2 - i4;
             final int i7 = i3 - i5;
@@ -119,19 +132,7 @@
         }
     }
-    
+
     public int getMaxTrackingDistance() {
         return 144;
     }
-    
-    static MinecraftServer getMinecraftServer(final PlayerManager playerManager) {
-        return playerManager.mcServer;
-    }
-    
-    static MCHashTable2 getPlayerInstances(final PlayerManager playerManager) {
-        return playerManager.playerInstances;
-    }
-    
-    static List getPlayerInstancesToUpdate(final PlayerManager playerManager) {
-        return playerManager.playerInstancesToUpdate;
-    }
 }
