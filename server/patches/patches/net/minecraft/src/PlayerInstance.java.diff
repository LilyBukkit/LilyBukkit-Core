--- PlayerInstance.java
+++ PlayerInstance.java
@@ -1,4 +1,6 @@
 package net.minecraft.src;
 
+import ru.vladthemountain.lilybukkit.core.LilyBukkit;
+
 import java.io.IOException;
 import java.util.ArrayList;
@@ -6,5 +8,5 @@
 
 class PlayerInstance {
-    private List players;
+    private List<EntityPlayerMP> players;
     private int chunkX;
     private int chunkZ;
@@ -19,8 +21,8 @@
     private int maxZ;
     final PlayerManager playerManager;
-    
+
     public PlayerInstance(final PlayerManager playerManager, final int x, final int z) {
         this.playerManager = playerManager;
-        this.players = (List)new ArrayList();
+        this.players = new ArrayList<>();
         this.blocksToUpdate = new short[10];
         this.numBlocksToUpdate = 0;
@@ -28,10 +30,10 @@
         this.chunkZ = z;
         this.currentChunk = new ChunkCoordIntPair(x, z);
-        PlayerManager.getMinecraftServer(playerManager).worldMngr.chunkProviderServer.loadChunk(x, z);
+        PlayerManager.getMinecraftServer(playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world")).chunkProviderServer.loadChunk(x, z);
     }
-    
+
     public void addPlayer(final EntityPlayerMP entityPlayerMP) {
         if (this.players.contains(entityPlayerMP)) {
-            throw new IllegalStateException(new StringBuilder("Failed to add player. ").append(entityPlayerMP).append(" already is in chunk ").append(this.chunkX).append(", ").append(this.chunkZ).toString());
+            throw new IllegalStateException("Failed to add player. " + entityPlayerMP + " already is in chunk " + this.chunkX + ", " + this.chunkZ);
         }
         entityPlayerMP.loadChunks.add(this.currentChunk);
@@ -40,10 +42,9 @@
         entityPlayerMP.loadedChunks.add(this.currentChunk);
     }
-    
+
     public void removePlayer(final EntityPlayerMP entityPlayerMP) {
         if (!this.players.contains(entityPlayerMP)) {
-            new IllegalStateException(new StringBuilder("Failed to remove player. ").append(entityPlayerMP).append(" isn't in chunk ").append(this.chunkX).append(", ").append(this.chunkZ).toString()).printStackTrace();
-        }
-        else {
+            new IllegalStateException("Failed to remove player. " + entityPlayerMP + " isn't in chunk " + this.chunkX + ", " + this.chunkZ).printStackTrace();
+        } else {
             this.players.remove(entityPlayerMP);
             if (this.players.size() == 0) {
@@ -53,5 +54,5 @@
                     PlayerManager.getPlayerInstancesToUpdate(this.playerManager).remove(this);
                 }
-                PlayerManager.getMinecraftServer(this.playerManager).worldMngr.chunkProviderServer.dropChunk(this.chunkX, this.chunkZ);
+                PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(entityPlayerMP.worldObj.levelName).chunkProviderServer.dropChunk(this.chunkX, this.chunkZ);
             }
             entityPlayerMP.loadedChunks.remove(this.currentChunk);
@@ -61,5 +62,5 @@
         }
     }
-    
+
     public void markBlockNeedsUpdate(final int x, final int y, final int z) {
         if (this.numBlocksToUpdate == 0) {
@@ -91,5 +92,5 @@
         }
         if (this.numBlocksToUpdate < 10) {
-            final short s4 = (short)(x << 12 | z << 8 | y);
+            final short s4 = (short) (x << 12 | z << 8 | y);
             for (int i5 = 0; i5 < this.numBlocksToUpdate; ++i5) {
                 if (this.blocksToUpdate[i5] == s4) {
@@ -100,8 +101,7 @@
         }
     }
-    
+
     public void sendTileEntity(final Packet packet) {
-        for (int i2 = 0; i2 < this.players.size(); ++i2) {
-            final EntityPlayerMP entityPlayerMP3 = (EntityPlayerMP)this.players.get(i2);
+        for (final EntityPlayerMP entityPlayerMP3 : this.players) {
             if (entityPlayerMP3.loadChunks.contains(this.currentChunk)) {
                 entityPlayerMP3.playerNetServerHandler.sendPacket(packet);
@@ -109,5 +109,5 @@
         }
     }
-    
+
     public void onUpdate() throws IOException {
         if (this.numBlocksToUpdate != 0) {
@@ -116,10 +116,9 @@
                 final int i2 = this.minY;
                 final int i3 = this.chunkZ * 16 + this.minZ;
-                this.sendTileEntity(new Packet53BlockChange(i1, i2, i3, PlayerManager.getMinecraftServer(this.playerManager).worldMngr));
-                if (Block.isBlockContainer[PlayerManager.getMinecraftServer(this.playerManager).worldMngr.getBlockId(i1, i2, i3)]) {
-                    this.sendTileEntity(new Packet59ComplexEntity(i1, i2, i3, PlayerManager.getMinecraftServer(this.playerManager).worldMngr.getBlockTileEntity(i1, i2, i3)));
+                this.sendTileEntity(new Packet53BlockChange(i1, i2, i3, PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world"))));
+                if (Block.isBlockContainer[PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world")).getBlockId(i1, i2, i3)]) {
+                    this.sendTileEntity(new Packet59ComplexEntity(i1, i2, i3, PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world")).getBlockTileEntity(i1, i2, i3)));
                 }
-            }
-            else if (this.numBlocksToUpdate == 10) {
+            } else if (this.numBlocksToUpdate == 10) {
                 this.minY = this.minY / 2 * 2;
                 this.maxY = (this.maxY / 2 + 1) * 2;
@@ -130,19 +129,17 @@
                 final int i5 = this.maxY - this.minY + 2;
                 final int i6 = this.maxZ - this.minZ + 1;
-                this.sendTileEntity(new Packet51MapChunk(i1, i2, i3, i4, i5, i6, PlayerManager.getMinecraftServer(this.playerManager).worldMngr));
-                final List list7 = PlayerManager.getMinecraftServer(this.playerManager).worldMngr.getTileEntityList(i1, i2, i3, i1 + i4, i2 + i5, i3 + i6);
-                for (int i7 = 0; i7 < list7.size(); ++i7) {
-                    final TileEntity tileEntity9 = (TileEntity)list7.get(i7);
+                this.sendTileEntity(new Packet51MapChunk(i1, i2, i3, i4, i5, i6, PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world"))));
+                final List<TileEntity> list7 = PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world")).getTileEntityList(i1, i2, i3, i1 + i4, i2 + i5, i3 + i6);
+                for (final TileEntity tileEntity9 : list7) {
                     this.sendTileEntity(new Packet59ComplexEntity(tileEntity9.xCoord, tileEntity9.yCoord, tileEntity9.zCoord, tileEntity9));
                 }
-            }
-            else {
-                this.sendTileEntity(new Packet52MultiBlockChange(this.chunkX, this.chunkZ, this.blocksToUpdate, this.numBlocksToUpdate, PlayerManager.getMinecraftServer(this.playerManager).worldMngr));
+            } else {
+                this.sendTileEntity(new Packet52MultiBlockChange(this.chunkX, this.chunkZ, this.blocksToUpdate, this.numBlocksToUpdate, PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world"))));
                 for (int i1 = 0; i1 < this.numBlocksToUpdate; ++i1) {
                     final int i2 = this.chunkX * 16 + (this.numBlocksToUpdate >> 12 & 0xF);
                     final int i3 = this.numBlocksToUpdate & 0xFF;
                     final int i4 = this.chunkZ * 16 + (this.numBlocksToUpdate >> 8 & 0xF);
-                    if (Block.isBlockContainer[PlayerManager.getMinecraftServer(this.playerManager).worldMngr.getBlockId(i2, i3, i4)]) {
-                        this.sendTileEntity(new Packet59ComplexEntity(i2, i3, i4, PlayerManager.getMinecraftServer(this.playerManager).worldMngr.getBlockTileEntity(i2, i3, i4)));
+                    if (Block.isBlockContainer[PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world")).getBlockId(i2, i3, i4)]) {
+                        this.sendTileEntity(new Packet59ComplexEntity(i2, i3, i4, PlayerManager.getMinecraftServer(this.playerManager).getWorldServer(PlayerManager.getMinecraftServer(playerManager).propertyManagerObj.getStringProperty(LilyBukkit.LEVEL_NAME, "world")).getBlockTileEntity(i2, i3, i4)));
                     }
                 }
